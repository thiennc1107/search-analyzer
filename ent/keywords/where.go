// Code generated by ent, DO NOT EDIT.

package keywords

import (
	"entgo.io/ent/dialect/sql"
	"github.com/mikestefanello/pagoda/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLTE(FieldID, id))
}

// AdsAmount applies equality check predicate on the "ads_amount" field. It's identical to AdsAmountEQ.
func AdsAmount(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldAdsAmount, v))
}

// Links applies equality check predicate on the "links" field. It's identical to LinksEQ.
func Links(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldLinks, v))
}

// SearchResultAmount applies equality check predicate on the "search_result_amount" field. It's identical to SearchResultAmountEQ.
func SearchResultAmount(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldSearchResultAmount, v))
}

// HTMLCode applies equality check predicate on the "html_code" field. It's identical to HTMLCodeEQ.
func HTMLCode(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldHTMLCode, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Keywords {
	return predicate.Keywords(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Keywords {
	return predicate.Keywords(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Keywords {
	return predicate.Keywords(sql.FieldNotIn(FieldStatus, vs...))
}

// AdsAmountEQ applies the EQ predicate on the "ads_amount" field.
func AdsAmountEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldAdsAmount, v))
}

// AdsAmountNEQ applies the NEQ predicate on the "ads_amount" field.
func AdsAmountNEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNEQ(FieldAdsAmount, v))
}

// AdsAmountIn applies the In predicate on the "ads_amount" field.
func AdsAmountIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldIn(FieldAdsAmount, vs...))
}

// AdsAmountNotIn applies the NotIn predicate on the "ads_amount" field.
func AdsAmountNotIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNotIn(FieldAdsAmount, vs...))
}

// AdsAmountGT applies the GT predicate on the "ads_amount" field.
func AdsAmountGT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGT(FieldAdsAmount, v))
}

// AdsAmountGTE applies the GTE predicate on the "ads_amount" field.
func AdsAmountGTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGTE(FieldAdsAmount, v))
}

// AdsAmountLT applies the LT predicate on the "ads_amount" field.
func AdsAmountLT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLT(FieldAdsAmount, v))
}

// AdsAmountLTE applies the LTE predicate on the "ads_amount" field.
func AdsAmountLTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLTE(FieldAdsAmount, v))
}

// LinksEQ applies the EQ predicate on the "links" field.
func LinksEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldLinks, v))
}

// LinksNEQ applies the NEQ predicate on the "links" field.
func LinksNEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNEQ(FieldLinks, v))
}

// LinksIn applies the In predicate on the "links" field.
func LinksIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldIn(FieldLinks, vs...))
}

// LinksNotIn applies the NotIn predicate on the "links" field.
func LinksNotIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNotIn(FieldLinks, vs...))
}

// LinksGT applies the GT predicate on the "links" field.
func LinksGT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGT(FieldLinks, v))
}

// LinksGTE applies the GTE predicate on the "links" field.
func LinksGTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGTE(FieldLinks, v))
}

// LinksLT applies the LT predicate on the "links" field.
func LinksLT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLT(FieldLinks, v))
}

// LinksLTE applies the LTE predicate on the "links" field.
func LinksLTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLTE(FieldLinks, v))
}

// SearchResultAmountEQ applies the EQ predicate on the "search_result_amount" field.
func SearchResultAmountEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldSearchResultAmount, v))
}

// SearchResultAmountNEQ applies the NEQ predicate on the "search_result_amount" field.
func SearchResultAmountNEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNEQ(FieldSearchResultAmount, v))
}

// SearchResultAmountIn applies the In predicate on the "search_result_amount" field.
func SearchResultAmountIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldIn(FieldSearchResultAmount, vs...))
}

// SearchResultAmountNotIn applies the NotIn predicate on the "search_result_amount" field.
func SearchResultAmountNotIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNotIn(FieldSearchResultAmount, vs...))
}

// SearchResultAmountGT applies the GT predicate on the "search_result_amount" field.
func SearchResultAmountGT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGT(FieldSearchResultAmount, v))
}

// SearchResultAmountGTE applies the GTE predicate on the "search_result_amount" field.
func SearchResultAmountGTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGTE(FieldSearchResultAmount, v))
}

// SearchResultAmountLT applies the LT predicate on the "search_result_amount" field.
func SearchResultAmountLT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLT(FieldSearchResultAmount, v))
}

// SearchResultAmountLTE applies the LTE predicate on the "search_result_amount" field.
func SearchResultAmountLTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLTE(FieldSearchResultAmount, v))
}

// HTMLCodeEQ applies the EQ predicate on the "html_code" field.
func HTMLCodeEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldEQ(FieldHTMLCode, v))
}

// HTMLCodeNEQ applies the NEQ predicate on the "html_code" field.
func HTMLCodeNEQ(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNEQ(FieldHTMLCode, v))
}

// HTMLCodeIn applies the In predicate on the "html_code" field.
func HTMLCodeIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldIn(FieldHTMLCode, vs...))
}

// HTMLCodeNotIn applies the NotIn predicate on the "html_code" field.
func HTMLCodeNotIn(vs ...int) predicate.Keywords {
	return predicate.Keywords(sql.FieldNotIn(FieldHTMLCode, vs...))
}

// HTMLCodeGT applies the GT predicate on the "html_code" field.
func HTMLCodeGT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGT(FieldHTMLCode, v))
}

// HTMLCodeGTE applies the GTE predicate on the "html_code" field.
func HTMLCodeGTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldGTE(FieldHTMLCode, v))
}

// HTMLCodeLT applies the LT predicate on the "html_code" field.
func HTMLCodeLT(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLT(FieldHTMLCode, v))
}

// HTMLCodeLTE applies the LTE predicate on the "html_code" field.
func HTMLCodeLTE(v int) predicate.Keywords {
	return predicate.Keywords(sql.FieldLTE(FieldHTMLCode, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Keywords) predicate.Keywords {
	return predicate.Keywords(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Keywords) predicate.Keywords {
	return predicate.Keywords(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Keywords) predicate.Keywords {
	return predicate.Keywords(sql.NotPredicates(p))
}
